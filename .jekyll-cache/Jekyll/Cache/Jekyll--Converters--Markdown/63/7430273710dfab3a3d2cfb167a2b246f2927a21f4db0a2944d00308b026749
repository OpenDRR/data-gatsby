I"=#<p><a href="../">back</a></p>
<h1 id="damage-state">Damage State</h1>

<p>DSRA full retrofit classified on sDtr_None_r2</p>

<!-- 
<!-- <div class="map-grid"> -->
<div id="map" class="leafmap" style="width: 100%;height:500px;"></div>
<p><!-- <div class="heading">
    <h2>Layers</h2>
  </div> -->
<!-- </div> -->
  <!-- <div id="custom-map-controls" class="custom-m
    ap-controls"></div> --></p>
<style>


  .map-grid {
    display: grid;
    grid-template-columns: 9fr 3fr;
  }

  .heading {
    border-right:1px solid rgba(0,0,0,0.25);
  }
/* 
  h2 {
    text-align: center;
    margin-top: 0;
  } */

  .legend {
    line-height: 18px;
    color: #555;
    background: white;
    background: rgba(255,255,255,0.8);
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    border-radius: 5px;
    padding: 6px 8px;
  }
  .legend i {
      width: 18px;
      height: 18px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;
  }

  /* .sidebar {
    /* position:absolute; */
    /* width:33.3333%;
    height:100%;
    top:5;
    padding-left:650;
    overflow:hidden;
    border-left:1px solid rgba(0,0,0,0.25);
  } */

  /* .custom-map-controls {
    position: absolute;
    width: 300px;
    height: 490px;
    left: 920px;
    top: 310px;
    border: 2px solid;
    border-color: black;
    border-radius: 20px;

  } */
</style>

<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>

<!-- <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script> -->

<script>

// L.Icon.Default.imagePath = 'images/carto/';

var viirs = 'VIIRS_SNPP_CorrectedReflectance_TrueColor';
// var modis = 'MODIS_Terra_CorrectedReflectance_TrueColor';

var basemap = {
  'OpenStreetMap': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    'attribution': '&copy; <a href="https://osmlab.github.io/attribution-mark/copyright/?name=gcweb-jekyll">OpenStreetMap</a> contributors',
    'minZoom': 2,
    'maxZoom': 19
  }),
  'Thunderforest': L.tileLayer('https://{s}.tile.thunderforest.com/' + 'outdoors' + '/{z}/{x}/{y}.png', {
    'attribution': 'Maps &copy; <a href="http://www.thunderforest.com/">Thunderforest</a>, &copy; <a href="https://osmlab.github.io/attribution-mark/copyright/?name=gcweb-jekyll">OpenStreetMap</a> contributors',
    'minZoom': 2,
    'maxZoom': 19
  }),
  'Carto': L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/' + 'dark_all' + '/{z}/{x}/{y}.png', {
    'attribution': '&copy; <a href="http://cartodb.com/attributions">CartoDB</a>, &copy; <a href="https://osmlab.github.io/attribution-mark/copyright/?name=gcweb-jekyll">OpenStreetMap</a> contributors',
    'minZoom': 2,
    'maxZoom': 19
  }),
  'Esri': L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
    'attribution': 'Tiles &copy; Esri, &copy; <a href="https://osmlab.github.io/attribution-mark/copyright/?name=gcweb-jekyll">OpenStreetMap</a> contributors',
    'minZoom': 3,
    'maxZoom': 18
  }),
  'Gibs': L.tileLayer('https://map1.vis.earthdata.nasa.gov/wmts-webmerc/' + viirs + '/default/' + '2021-01-11' + '/GoogleMapsCompatible_Level9/{z}/{y}/{x}.jpg', {
    'attribution': 'Maps &copy; <a href="http://earthdata.nasa.gov">Gibs</a>, &copy; <a href="https://osmlab.github.io/attribution-mark/copyright/?name=gcweb-jekyll">OpenStreetMap</a> contributors',
    'minZoom': 3,
    'maxZoom': 9
  })
};


//  Mike's Code

// var OpenStreetMap = L.tileLayer(mapboxUrl, {id: 'MapID', minZoom: 2, maxZoom: 19, attribution: '&copy; <a href="https://osmlab.github.io/attribution-mark/copyright/?name=gcweb-jekyll">OpenStreetMap</a> contributors' }),

// var map = L.map('map', {
//   center: [, ],
//   zoom: [10],
//   layers: [OpenStreetMap, EconomicRegionLayer]
// });


// var geoJSON = [
//   {
//     "type": [sDtr_None_r2],
//     "features": [
//       {
//       "type": "Feature",
//       "geometry": {
//         "type": "Point",
//         "coordinates": [, ]
//       }
//       }
//     ]
//   }
// ];

// var customMapControls = document.getElementById('custom-map-controls')

// var economicRegionLayer = L.basemap.featureLayer().addTo(map);

// economicRegionLayer.setGeoJSON(geojson);



// function createMenuItem(name) {
//   let li = document.createElement('li');
//   li.textContent = name;
//   return li;
// }

// var layers = L.layerGroup([Thunderforest, Carto, Esri, Gibs])

// const menu = document.querySelector('#map');

// menu.appendChild(createMenuItem(Thunderforest));
// menu.appendChild(createMenuItem(Carto));
// menu.appendChild(createMenuItem(Esri));
// menu.appendChild(createMenuItem(Gibs));

// L.control.layers(basemap).addTo(map);

// $(document).ready(function () {

// var newParent = document.getElementById('custom-map-controls');
//         var oldParent = document.getElementsByClassName("map")

//         while (oldParent[0].childNodes.length > 0) {
//             newParent.appendChild(oldParent[0].childNodes[0]);
//         }
//  });


//  var add = document.getElementById("add");

// var layer={
// 		x:0,
// };

// if (add!=null){
// add.onclick=function(){
// 		var x=document.getElementById("Thunderforest").value;
// 		var y=document.getElementById("Carto").value;
// 		var z=document.getElementById("Esri").value;
// 		var u=document.getElementById("Gibs").value;
// 		layer.x+=1;
// 		var k=layer.x;
// 		var name= "item"+k;
// 		layer[`${name}`]={"x":k, "Thunderforest":x, "Carto":y, "Esri":z, "Gibs":u};
// 		console.log(layer);
// };
// }

// var control = L.control.layers(basemap)
// // control.addTo(map);

// var htmlObject = control.getContainer();
// var a = document.getElementById('radio-section')
// a.appendChild(control.onAdd(map))


// function setParent(el, newParent)
//  {
//     newParent.appendChild(el);
//  }
//  setParent(htmlObject, a);

//  Mike's Code

var map = L.map('map', {
  
  'center': [49.24, -123.11],
  
  
  'zoom': 10,
  
  
  'layers': [basemap.OpenStreetMap]
  
	
});
map.scrollWheelZoom.disable();








var layer_obj;
fetch( "/assets/data/afm7p2_lrdmf_damage_state_sauid.geojson" ).then(( resp ) => {
    return resp.json();
}).then(( data ) => {
    layer_obj = data;
    _addGeoJSONObjToMap( layer_obj, map );
}).catch(( err ) => {
    console.log( err );
    _addGeoJSONObjToMap( layer_obj, map );
});


// 
// var layer_obj;
// fetch( "" ).then(( resp ) => {
//     return resp.json();
// }).then(( data ) => {
//     layer_obj = data;
//     _addGeoJSONObjToMap( layer_obj, map );
// }).catch(( err ) => {
//     console.log( err );
//     _addGeoJSONObjToMap( layer_obj, map );
// });
// 

function _onEachFeature( feature, layer ) {
    var potentialPopup = ""
    if ( feature.properties && feature.properties.popupContent ) {
        potentialPopup += feature.properties.popupContent;
    }
    if ( feature.properties && feature.properties.href ) {
        potentialPopup += 
            '<a href="' + feature.properties.href + '">' + 
                '<img src="' + newWindowImgSrcBase64 + '"></img></a>';}
    if( potentialPopup ){
        layer.bindPopup(potentialPopup );
    }
}

function _addGeoJSONObjToMap( leafletItem, map ){
  var geojson = L.geoJSON( leafletItem, { 
      onEachFeature: _onEachFeature,
      style: featureStyle
  } );
  geojson.addTo( map );
  
}

function getColor(d) {
    return d > 1000 ? '#800026' :
           d > 500  ? '#BD0026' :
           d > 200  ? '#E31A1C' :
           d > 100  ? '#FC4E2A' :
           d > 50   ? '#FD8D3C' :
           d > 20   ? '#FEB24C' :
           d > 10   ? '#FED976' :
                      '#FFEDA0';
}

function featureStyle(feature) {
    return {
        fillColor: getColor(feature.properties.sDtr_None_r2),
        weight: 0.5,
        opacity: 1,
        color: 'white',
        dashArray: '0',
        fillOpacity: 0.5
    };
}



// var customMapControls = L.control({position: 'right'});
// customMapControls.onAdd = function (customMapControls) {

// return div;
// };

// customMapControlsaddTo('custom-map-controls');




var legend = L.control({position: 'bottomright'});

legend.onAdd = function (map) {

    var div = L.DomUtil.create('div', 'info legend'),
        grades = [0, 10, 20, 50, 100, 200, 500, 1000],
        labels = [];

    // loop through our density intervals and generate a label with a colored square for each interval
    for (var i = 0; i < grades.length; i++) {
        div.innerHTML +=
            '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
            grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
    }

    return div;
};

legend.addTo(map);
</script>

<p>â€“&gt;</p>

<h2 id="downloads">Downloads</h2>

<p><a href="/assets/data/afm7p2_lrdmf_damage_state_sauid.geojson">GeoJSON</a>
<a href="https://creativecommons.org/licenses/by/4.0/">License</a></p>
<h4>Project Lead</h4>
<p>Hastings, Nicky</p>
<ul>
<li>Phone:+01-604-666-3955</li>
<li>Fax:+01-604-666-1124</li>
<li>Email:nicky.hastings@canada.ca</li>
</ul>
:ET