{"version":3,"sources":["webpack://gatsby-starter-default/./node_modules/gatsby-plugin-breadcrumb/components/Breadcrumb.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-breadcrumb/components/auto-gen-crumb.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-breadcrumb/components/click-tracking-crumb.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-breadcrumb/components/index.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-breadcrumb/components/useBreadcrumb.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-breadcrumb/index.js","webpack://gatsby-starter-default/./src/components/Breadcrumb/index.js","webpack://gatsby-starter-default/./src/components/header.jsx","webpack://gatsby-starter-default/./src/components/footer.jsx","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/Alberta.en.js","webpack://gatsby-starter-default/./src/svg/AB-Generalized.svg"],"names":["_interopRequireDefault","require","exports","__esModule","default","_react","_autoGenCrumb","_clickTrackingCrumb","_optionsContext","_default","props","useContext","OptionsContext","useAutoGen","createElement","_extends2","_objectWithoutPropertiesLoose2","_propTypes","_gatsby","AutoGenCrumb","_ref","title","autoGenCrumbs","crumbs","crumbLabelOverride","crumbLabel","crumbSeparator","disableLinks","hiddenCrumbs","rest","Fragment","className","map","c","i","includes","pathname","key","Link","to","activeClassName","length","defaultProps","propTypes","string","arrayOf","shape","location","isRequired","_useBreadcrumb2","ClickTrackingCrumb","usePathPrefix","_useBreadcrumb$crumbs","replace","RegExp","_Breadcrumb","Breadcrumb","_breadcrumbContext","BreadcrumbContext","BreadcrumbConsumer","BreadcrumbProvider","_useBreadcrumb","useBreadcrumb","_React$useContext","updateCrumbs","useEffect","_components","role","id","property","crumb","style","display","href","render","typeof","src","Logo","alt","Component","children","lang","YAMLData","data","index","url","ABMapComponent","marginTop","lastUpdated","format","defaultActiveKey","marginBottom","as","Button","variant","eventKey"],"mappings":"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","file":"component---src-pages-alberta-en-js-c4abd180c98de30176b9.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _autoGenCrumb = _interopRequireDefault(require(\"./auto-gen-crumb\"));\n\nvar _clickTrackingCrumb = _interopRequireDefault(require(\"./click-tracking-crumb\"));\n\nvar _optionsContext = require(\"./options-context\");\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable react/no-array-index-key */\nvar Breadcrumb = function Breadcrumb(props) {\n  var _React$useContext = _react.default.useContext(_optionsContext.OptionsContext),\n      useAutoGen = _React$useContext.useAutoGen;\n\n  return useAutoGen ? /*#__PURE__*/_react.default.createElement(_autoGenCrumb.default, props) : /*#__PURE__*/_react.default.createElement(_clickTrackingCrumb.default, props);\n};\n\nvar _default = Breadcrumb;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _gatsby = require(\"gatsby\");\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable react/no-array-index-key */\nvar AutoGenCrumb = function AutoGenCrumb(_ref) {\n  var title = _ref.title,\n      autoGenCrumbs = _ref.crumbs,\n      crumbLabelOverride = _ref.crumbLabel,\n      crumbSeparator = _ref.crumbSeparator,\n      disableLinks = _ref.disableLinks,\n      hiddenCrumbs = _ref.hiddenCrumbs,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"title\", \"crumbs\", \"crumbLabel\", \"crumbSeparator\", \"disableLinks\", \"hiddenCrumbs\"]);\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, title && /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"breadcrumb__title\"\n  }, title), /*#__PURE__*/_react.default.createElement(\"nav\", {\n    className: \"breadcrumb\",\n    \"aria-label\": \"Breadcrumb\"\n  }, /*#__PURE__*/_react.default.createElement(\"ol\", {\n    className: \"breadcrumb__list\"\n  }, autoGenCrumbs.map(function (c, i) {\n    if (hiddenCrumbs.includes(c.pathname)) {\n      return null;\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n      key: i + \"-\" + c.pathname\n    }, !disableLinks.includes(c.pathname) && /*#__PURE__*/_react.default.createElement(\"li\", {\n      className: \"breadcrumb__list__item\"\n    }, /*#__PURE__*/_react.default.createElement(_gatsby.Link, (0, _extends2.default)({\n      to: c.pathname,\n      className: \"breadcrumb__link\",\n      activeClassName: \"breadcrumb__link__active\",\n      \"aria-current\": i === autoGenCrumbs.length - 1 ? 'page' : null\n    }, rest), crumbLabelOverride && i === autoGenCrumbs.length - 1 ? crumbLabelOverride : c.crumbLabel)), disableLinks.includes(c.pathname) && /*#__PURE__*/_react.default.createElement(\"li\", {\n      className: \"breadcrumb__list__item\"\n    }, /*#__PURE__*/_react.default.createElement(\"span\", (0, _extends2.default)({\n      className: \"breadcrumb__link__disabled\"\n    }, rest), crumbLabelOverride && i === autoGenCrumbs.length - 1 ? crumbLabelOverride : c.crumbLabel)), i === autoGenCrumbs.length - 1 ? null : /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: \"breadcrumb__separator\",\n      \"aria-hidden\": \"true\"\n    }, crumbSeparator));\n  }))));\n};\n\nAutoGenCrumb.defaultProps = {\n  title: '',\n  crumbSeparator: ' / ',\n  crumbLabel: null,\n  disableLinks: [],\n  hiddenCrumbs: []\n};\nAutoGenCrumb.propTypes = {\n  title: _propTypes.default.string,\n  crumbSeparator: _propTypes.default.string,\n  crumbs: _propTypes.default.arrayOf(_propTypes.default.shape({\n    location: _propTypes.default.shape(),\n    pathname: _propTypes.default.string.isRequired\n  })).isRequired,\n  crumbLabel: _propTypes.default.string,\n  disableLinks: _propTypes.default.arrayOf(_propTypes.default.string),\n  hiddenCrumbs: _propTypes.default.arrayOf(_propTypes.default.string)\n};\nvar _default = AutoGenCrumb;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _optionsContext = require(\"./options-context\");\n\nvar _useBreadcrumb2 = _interopRequireDefault(require(\"./useBreadcrumb\"));\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable react/no-array-index-key */\nvar ClickTrackingCrumb = function ClickTrackingCrumb(_ref) {\n  var title = _ref.title,\n      location = _ref.location,\n      crumbLabel = _ref.crumbLabel,\n      crumbSeparator = _ref.crumbSeparator,\n      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, [\"title\", \"location\", \"crumbLabel\", \"crumbSeparator\"]);\n\n  var _React$useContext = _react.default.useContext(_optionsContext.OptionsContext),\n      usePathPrefix = _React$useContext.usePathPrefix;\n\n  var _useBreadcrumb = (0, _useBreadcrumb2.default)({\n    location: (0, _extends2.default)({}, location, {\n      pathname: usePathPrefix ? location.pathname.replace(new RegExp(\"^\" + usePathPrefix), '') : location.pathname\n    }),\n    crumbLabel: crumbLabel,\n    crumbSeparator: crumbSeparator\n  }),\n      _useBreadcrumb$crumbs = _useBreadcrumb.crumbs,\n      crumbs = _useBreadcrumb$crumbs === void 0 ? [] : _useBreadcrumb$crumbs;\n\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, title && /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"breadcrumb__title\"\n  }, title), /*#__PURE__*/_react.default.createElement(\"nav\", {\n    className: \"breadcrumb\",\n    \"aria-label\": \"Breadcrumb\"\n  }, /*#__PURE__*/_react.default.createElement(\"ol\", {\n    className: \"breadcrumb__list\"\n  }, crumbs.map(function (c, i) {\n    return /*#__PURE__*/_react.default.createElement(\"li\", {\n      className: \"breadcrumb__item\",\n      key: i\n    }, /*#__PURE__*/_react.default.createElement(_gatsby.Link, (0, _extends2.default)({\n      to: c.pathname || '',\n      className: \"breadcrumb__link\",\n      activeClassName: \"breadcrumb__link__active\",\n      \"aria-current\": i === crumbs.length - 1 ? 'page' : null\n    }, rest), c.crumbLabel), i === crumbs.length - 1 ? null : /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: \"breadcrumb__separator\",\n      \"aria-hidden\": \"true\"\n    }, c.crumbSeparator));\n  }))));\n};\n\nClickTrackingCrumb.defaultProps = {\n  title: '',\n  crumbSeparator: ' / '\n};\nClickTrackingCrumb.propTypes = {\n  location: _propTypes.default.shape().isRequired,\n  crumbLabel: _propTypes.default.string.isRequired,\n  title: _propTypes.default.string,\n  crumbSeparator: _propTypes.default.string\n};\nvar _default = ClickTrackingCrumb;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _Breadcrumb = _interopRequireDefault(require(\"./Breadcrumb\"));\n\nexports.Breadcrumb = _Breadcrumb.default;\n\nvar _autoGenCrumb = _interopRequireDefault(require(\"./auto-gen-crumb\"));\n\nexports.AutoGenCrumb = _autoGenCrumb.default;\n\nvar _breadcrumbContext = require(\"./breadcrumb-context\");\n\nexports.BreadcrumbContext = _breadcrumbContext.BreadcrumbContext;\nexports.BreadcrumbConsumer = _breadcrumbContext.BreadcrumbConsumer;\nexports.BreadcrumbProvider = _breadcrumbContext.BreadcrumbProvider;\n\nvar _useBreadcrumb = _interopRequireDefault(require(\"./useBreadcrumb\"));\n\nexports.useBreadcrumb = _useBreadcrumb.default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _breadcrumbContext = require(\"./breadcrumb-context\");\n\n/* eslint-disable import/no-extraneous-dependencies */\nvar useBreadcrumb = function useBreadcrumb(_ref) {\n  var location = _ref.location,\n      crumbLabel = _ref.crumbLabel,\n      crumbSeparator = _ref.crumbSeparator;\n\n  var _React$useContext = _react.default.useContext(_breadcrumbContext.BreadcrumbContext),\n      crumbs = _React$useContext.crumbs,\n      updateCrumbs = _React$useContext.updateCrumbs;\n\n  _react.default.useEffect(function () {\n    updateCrumbs({\n      location: location,\n      crumbLabel: crumbLabel,\n      crumbSeparator: crumbSeparator\n    });\n  }, [location, crumbLabel, crumbSeparator, updateCrumbs]);\n\n  return {\n    crumbs: crumbs\n  };\n};\n\nvar _default = useBreadcrumb;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\n\nvar _components = require(\"./components\");\n\nexports.Breadcrumb = _components.Breadcrumb;\nexports.BreadcrumbContext = _components.BreadcrumbContext;\nexports.BreadcrumbConsumer = _components.BreadcrumbConsumer;\nexports.BreadcrumbProvider = _components.BreadcrumbProvider;\nexports.useBreadcrumb = _components.useBreadcrumb;\nexports.AutoGenCrumb = _components.AutoGenCrumb;","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Breadcrumb = ({ crumbs }) => {\n  return (\n    <nav role=\"navigation\" id=\"wb-bc\" property=\"breadcrumb\">\n      <div>\n        {crumbs.map((crumb) => {\n          return (\n            <div className=\"container\" style={{ display: \"inline\" }}>\n              <ol className=\"breadcrumb\">\n                <li>\n                  <a href=\"https://www.canada.ca/en.html\">Canada.ca</a>\n                </li>\n                <li>\n                  <Link to=\"/\">OpenDRR</Link>\n                </li>\n                <li>\n                  <Link to={crumb.pathname}>{crumb.crumbLabel}</Link>\n                </li>\n              </ol>\n            </div>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\nexport default Breadcrumb;\n","import React, { Component } from \"react\";\nimport Logo from \"../images/sig-blk-en.svg\";\nimport { Link } from \"gatsby\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header-styles\">\n        <div className=\"row\">\n          <div id=\"wb-bnr\" className=\"container\">\n            <section id=\"wb-lang\" className=\"text-right\">\n              <h2 className=\"wb-inv\">Language Selection</h2>\n              <div\n                className=\"brand col-xs-5 col-md-4\"\n                property=\"publisher\"\n                typeof=\"GovernmentOrganization\"\n              >\n                <a href=\"https://www.canada.ca/en.html\">\n                  <img className=\"\" src={Logo} alt=\"logo\" />\n                </a>\n              </div>\n              <ul className=\"list-inline margin-bottom-none\">\n                <li id=\"#wb-lng\">\n                  <Link to=\"/fr/\">Français</Link>\n                </li>\n              </ul>\n            </section>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n// import FooterLogo from \"../images/wmms-blk.svg\";\n\nconst Footer = () => (\n  <footer id=\"wb-info\">\n    <div className=\"landscape\">\n      <nav className=\"container wb-navcurr\">\n        <h2 className=\"wb-inv\">\n          <ul className=\"list-unstyled colcount-sm-2 colcount-md-3\">\n            <li>\n              <a href=\"https://www.canada.ca/en/contact.html\">Contact us</a>\n            </li>\n            <li>\n              <a href=\"https://www.canada.ca/en/government/dept.html\">\n                Departments and agencies\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.canada.ca/en/government/publicservice.html\">\n                Public service and military\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.canada.ca/en/news.html\">News</a>\n            </li>\n            <li>\n              <a href=\"https://www.canada.ca/en/government/system/laws.html\">\n                Treaties, laws and regulations\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.canada.ca/en/transparency/reporting.html\">\n                Government-wide reporting\n              </a>\n            </li>\n            <li>\n              <a href=\"https://pm.gc.ca/eng\">Prime Minister</a>\n            </li>\n            <li>\n              <a href=\"https://www.canada.ca/en/government/system.html\">\n                How government works\n              </a>\n            </li>\n            <li>\n              <a href=\"https://open.canada.ca/en/\">Open government</a>\n            </li>\n          </ul>\n        </h2>\n      </nav>\n    </div>\n    <div className=\"brand\">\n      <div className=\"container\">\n        <div className=\"row \">\n          <nav className=\"col-md-9 col-lg-10 ftr-urlt-lnk\">\n            <h2 className=\"wb-inv\">About this site</h2>\n            <ul>\n              <li>\n                <a href=\"https://www.canada.ca/en/social.html\">Social media</a>\n              </li>\n              <li>\n                <a href=\"https://www.canada.ca/en/mobile.html\">\n                  Mobile applications\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www1.canada.ca/en/newsite.html\">\n                  About Canada.ca\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.canada.ca/en/transparency/terms.html\">\n                  Terms and conditions\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.canada.ca/en/transparency/privacy.html\">\n                  Privacy\n                </a>\n              </li>\n            </ul>\n          </nav>\n          <div className=\"col-xs-6 visible-sm visible-xs tofpg\">\n            <a href=\"#wb-cont\">\n              Top of Page{\" \"}\n              <span className=\"glyphicon glyphicon-chevron-up\"></span>\n            </a>\n          </div>\n          <div className=\"col-xs-6 col-md-3 col-lg-2 text-right\">\n            <img\n              src=\"https://wet-boew.github.io/themes-dist/GCWeb/GCWeb/assets/wmms-blk.svg\"\n              alt=\"Symbol of the Government of Canada\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\nimport \"../styles/index.scss\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <div className=\"mt-1\">\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ABMapComponent from \"../svg/AB-Generalized.svg\";\nimport YAMLData from \"../../content/data/yaml/prov-terr.yaml\";\nimport { Link } from \"gatsby\";\nimport { Accordion, Card, Button } from \"react-bootstrap\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { useBreadcrumb } from \"gatsby-plugin-breadcrumb\";\nimport Breadcrumb from \"../components/Breadcrumb\";\n\nconst Alberta = ({ location }) => {\n  const { crumbs } = useBreadcrumb({\n    location,\n    crumbLabel: \"Alberta\",\n  });\n  return (\n    <Layout>\n      <SEO title=\"Alberta\" lang=\"en\" />\n      <div className=\"container provincial-banner\">\n        <Breadcrumb crumbs={crumbs} />\n        <div className=\"provincial-data\">\n          <h1 id=\"wb-cont\">{YAMLData.enNameAB}</h1>\n        </div>\n        <section className=\"gc-srvinfo col-md-3 pull-left\">\n          <ul>\n            {YAMLData.enContentAB.map((data, index) => {\n              return (\n                <li key={`enContentAB_region_${index}`}>\n                  <Link to={data.url}>{data.title}</Link>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n        <section className=\"col-lg-9 col-s-4 pull-right\">\n          <img\n            className=\"prov-map\"\n            src={ABMapComponent}\n            alt=\"Economic Regions of Alberta Map\"\n          />\n        </section>\n      </div>\n      <section className=\"container\">\n        <div>\n          <h2>Provincial Level Datasets</h2>\n          <table\n            className=\"table table-hover\"\n            style={{\n              marginTop: \"5vh\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Date Modified</th>\n                <th>Format</th>\n              </tr>\n            </thead>\n            <tbody>\n              {YAMLData.downloads.map((data, index) => {\n                return (\n                  <tr key={`downloads_${index}`}>\n                    <td key={`downloads_file_title_${index}`}>{data.title}</td>\n                    <td key={`downloads_file_lastUpdated_${index}`}>\n                      {data.lastUpdated}\n                    </td>\n                    <td key={`downloads_file_format_${index}`}>\n                      <span className=\"label label-default\">{data.format}</span>\n                    </td>\n                    <td key={`downloads_file_url_${index}`}>\n                      <Link\n                        className=\"btn btn-primary btn-sm pull-right\"\n                        to={data.url}\n                      >\n                        Access\n                      </Link>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n          <h2>Economic Region Level Datasets</h2>\n          <Accordion\n            defaultActiveKey=\"0\"\n            style={{\n              marginBottom: \"20vh\",\n              marginTop: \"5vh\",\n            }}\n          >\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                  Lethbridge Medicine Hat (4810)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4810.map((data, index) => {\n                        return (\n                          <tr key={`downloads4810_${index}`}>\n                            <td key={`downloads5910_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4810_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4810_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4810_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                  Camrose Drumheller (4820)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"1\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4820.map((data, index) => {\n                        return (\n                          <tr key={`downloads4820_${index}`}>\n                            <td key={`downloads4820_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4820_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4820_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4820_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                  Calgary (4830)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"2\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4830.map((data, index) => {\n                        return (\n                          <tr key={`downloads4830_${index}`}>\n                            <td key={`downloads4830_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4830_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4830_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4830_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\n                  Banff Jasper Rocky Mountain House (4840)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"3\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4840.map((data, index) => {\n                        return (\n                          <tr key={`downloads4840_${index}`}>\n                            <td key={`downloads4840_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4840_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4840_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4840_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\">\n                  Red Deer (4850)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"4\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4850.map((data, index) => {\n                        return (\n                          <tr key={`downloads4850_${index}`}>\n                            <td key={`downloads4850_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4850_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4850_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4850_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\">\n                  Edmonton (4860)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"5\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4860.map((data, index) => {\n                        return (\n                          <tr key={`downloads4860_${index}`}>\n                            <td key={`downloads4860_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4860_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4860_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4860_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"6\">\n                  Athabasca Grande Prairie Peace River (4870)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"6\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4870.map((data, index) => {\n                        return (\n                          <tr key={`downloads4870_${index}`}>\n                            <td key={`downloads4870_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4870_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4870_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4870_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"7\">\n                  Wood Buffalo Cold Lake (4880)\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"7\">\n                <Card.Body>\n                  <table className=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date Modified</th>\n                        <th>Format</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {YAMLData.downloads4880.map((data, index) => {\n                        return (\n                          <tr key={`downloads4880_${index}`}>\n                            <td key={`downloads4880_threat_title_${index}`}>\n                              {data.title}\n                            </td>\n                            <td\n                              key={`downloads4880_threat_lastUpdated_${index}`}\n                            >\n                              {data.lastUpdated}\n                            </td>\n                            <td key={`downloads4880_threat_format_${index}`}>\n                              <span className=\"label label-default\">\n                                {data.format}\n                              </span>\n                            </td>\n                            <td key={`downloads4880_threat_url_${index}`}>\n                              <Link\n                                className=\"btn btn-primary btn-sm pull-right\"\n                                to={data.url}\n                              >\n                                Access\n                              </Link>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Alberta;\n","export default __webpack_public_path__ + \"static/AB-Generalized-cc2307fdea234e943ef403790439cdb3.svg\";"],"sourceRoot":""}